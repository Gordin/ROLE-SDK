<?xml version="1.0" encoding="UTF-8"?>
<Module>
  <ModulePrefs title="Basics of resources" author_email="mpalmer@gmail.com" height="320" description="The purpose of this widget is to show how to work with resources.">
  	<Require feature="opensocial-0.9" />
    <Require feature="openapp" />
    <Optional feature="content-rewrite">
	    <Param name="exclude-url">*</Param>
	</Optional>
    <OAuth>
 	<Service name="openapp" xmlns:openapp="http://www.role-project.eu/xml/openapp/opensocialext/"
               openapp:service="http://purl.org/role/terms/spaceService"
               openapp:permitReadAppend="http://purl.org/role/terms/data">
        <Request method="" url=""/>
        <Authorization url=""/>
        <Access method="" url=""/>
      </Service>
    </OAuth>
  </ModulePrefs>
  <UserPref name="shared" display_name="Shared comments" datatype="bool" 
               default_value="true"/>

  <Content type="html"><![CDATA[

    <!-- ========= Style section ============ -->
	<style>
		html, body {height: 100%;overflow-y: auto;}
		#insert {margin: 2%;padding: 0px; border-bottom: 3px solid blue;}
		#add {float: right;}
		#addRow {height: 1.7em;}
		textarea {width: 100%;}
		#title {font-weight: bold;color: red;}
		#comments {width: 98%;margin: 1%;border-collapse:collapse; table-layout: fixed;}
		.commentRow:hover {background: yellow; cursor: pointer;}
		td {border-bottom: 1px solid lightgrey;overflow: hidden; white-space: nowrap;text-overflow: ellipsis;border-right: 1px solid lightgrey;}
		.col1 {width: 30%;}
		.col3 {width: 1.85em; border-right-width: 0px}
	</style>
	
	
    <!-- ========= Content section ============ -->
    <div id="insert">
    	<span>About:&nbsp;</span><span id="title"></span><br/>
	    <textarea id="comment"></textarea><br/>
    	<div id="addRow"><button id="add" type="button" disabled="disabled">add comment</button></div>
	</div>
	<table id="comments"></table>

   <!--======   JavaScript section    ========->
   <!-- For simplicity, lets rely on jquery for manipulating the DOM. -->
   <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js" type="text/javascript"></script>
   
   <script>
	 gadgets.util.registerOnLoadHandler(function() {
		var prefs = new gadgets.Prefs();
		// Top resource is either the space or user resource depending on the "shared" userPref.
		var top = new openapp.oo.Resource(prefs.getBool("shared") ? openapp.param.space() : openapp.param.user());

		var curr_enve, curr_mess, sentEventTime;
		var schemaOrgNS = "http://schema.org/";
		
		// Load all the resource (comments) in the current space
		top.getSubResources({
			relation: openapp.ns.role + "data",
			type: schemaOrgNS+"Review",
			onEach: showComment});
		
		// Function to add a resource to the list (of comments).
		function showComment(comment) {
			var node = $('<tr class="commentRow"></tr>').appendTo($("#comments"));
			
			// Fetch the metadata about the comment
			comment.getMetadata(null, function(md) {
				node.click(function() {                 //Click on a comment to send out an event.
					sentEventTime = new Date();
					var url = comment.getURI();
					gadgets.openapp.publish({uri: url,entry: url}, md);
				});
				//Create the row for a comment with the title, comment text and a button to remove it.
				node.append('<td class="col1" title="'+md[openapp.ns.dcterms+"title"]+'">'+md[openapp.ns.dcterms+"title"]+'</td>');
				node.append('<td class="col2" title="'+md[schemaOrgNS+"reviewBody"]+'">'+md[schemaOrgNS+"reviewBody"]+'</td>');
				node.append('<td class="col3"><button type="button">X</button></td>');
				node.find("button").click(function() {
					comment.del();
					node.remove();
				});
			});
		}
		
		// Comment button click generates a comment on whatever is shown in the title field.
		$("button").click(function(e) {
       		var md = {};
       		md[openapp.ns.dcterms+"title"] = curr_mess[openapp.ns.dcterms+"title"];
       		md[schemaOrgNS+"itemReviewed"] = curr_enve.uri;
       		md[schemaOrgNS+"reviewBody"] = $("#comment").val();
       		
       		//A new resource is created in the space/for the user via the relation, with a specific type and with the given metadata. 
       		top.create({
       			metadata: md,
       			relation: openapp.ns.role + "data",
       			type: schemaOrgNS+"Review",
       			callback: showComment
       		});
       		
       		$("#add").attr("disabled", "disabled"); //Disable the button
       		$("#comment").val("");                  //Empty the comment field
       		$("#title").html("");                    //Empty the indicator of what is being commented
       });
       
       //Listen for events
       gadgets.openapp.connect(function(envelope, message) {
       		// Avoid to react to the own events that is echoed back
	       	if (sentEventTime == null || (new Date().getTime() - sentEventTime.getTime()) >= 500) {
	       		curr_enve = envelope;curr_mess = message;
    	   		$("#add").removeAttr("disabled");                        //Enable the comment button
       			$("#title").html(message[openapp.ns.dcterms+"title"]);   //Update the title field.
       		}
       });
     });
   </script>
]]></Content>
</Module>